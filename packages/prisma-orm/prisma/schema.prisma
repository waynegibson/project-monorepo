datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64"]
}

generator json {
  provider  = "prisma-json-types-generator"
  namespace = "PrismaJson"
}

enum Role {
  ADMIN
  USER
}

enum Status {
  ACTIVE
  INACTIVE
  DISABLED
  DELETED
  PENDING
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  firstname String?
  lastname  String?
  posts     Post[]
  role      Role

  @@map("users")
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean
  title     String
  content   String?
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?

  @@map("posts")
}

model Course {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  status      Status   @default(INACTIVE)
  slug        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  classes    CourseClass[]
  categories CourseCategory[]

  @@map("courses")
}

model CourseClass {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  /// [PriceType]
  price       Json
  duration    String
  audience    String
  features    String[]
  mostPopular Boolean  @default(false)
  status      Status   @default(INACTIVE)
  slug        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  course   Course @relation(fields: [courseId], references: [id])
  courseId Int

  @@map("course_classes")
}

model CourseCategory {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  eyebrow     String?
  badge       String?
  excerpt     String
  description String
  /// [LinkType]
  link        Json
  slug        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  courses Course[]

  @@map("course_categories")
}
